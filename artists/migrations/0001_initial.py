# Generated by Django 5.2.5 on 2025-08-29 23:04

import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('release_date', models.DateField(blank=True, db_index=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='albums/covers/')),
                ('album_type', models.CharField(choices=[('album', 'Album'), ('single', 'Single'), ('ep', 'EP'), ('compilation', 'Compilation')], default='album', max_length=20)),
                ('label', models.CharField(blank=True, max_length=120, null=True)),
                ('total_tracks', models.PositiveSmallIntegerField(default=0)),
                ('is_explicit', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-release_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='artists/avatars/')),
                ('is_verified', models.BooleanField(default=False)),
                ('monthly_listeners', models.PositiveIntegerField(default=0)),
                ('followers_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='artists_art_slug_6a2353_idx'), django.contrib.postgres.indexes.GinIndex(fields=['name'], name='artist_name_gin_idx', opclasses=['gin_trgm_ops'])],
            },
        ),
        migrations.CreateModel(
            name='AlbumArtist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('primary', 'Primary'), ('featured', 'Featured')], default='primary', max_length=20)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.artist')),
            ],
            options={
                'ordering': ['album', 'artist'],
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(related_name='albums', through='artists.AlbumArtist', to='artists.artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='primary_artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='albums_as_primary_artist', to='artists.artist'),
        ),
        migrations.CreateModel(
            name='ArtistFollower',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='artists.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='artists.genre')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('track_number', models.PositiveSmallIntegerField()),
                ('disc_number', models.PositiveSmallIntegerField(default=1)),
                ('duration_ms', models.PositiveIntegerField()),
                ('is_explicit', models.BooleanField(default=False)),
                ('isrc', models.CharField(blank=True, max_length=12, null=True)),
                ('audio_original', models.FileField(upload_to='tracks/original/')),
                ('audio_hls_master', models.FileField(blank=True, null=True, upload_to='tracks/hls/')),
                ('waveform_json', models.JSONField(blank=True, null=True)),
                ('bitrate_kbps', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('loudness_lufs', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sample_rate', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('popularity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='artists.album')),
                ('genres', models.ManyToManyField(blank=True, related_name='tracks', to='artists.genre')),
                ('primary_artist', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tracks_as_primary_artist', to='artists.artist')),
            ],
            options={
                'ordering': ['album', 'disc_number', 'track_number'],
            },
        ),
        migrations.CreateModel(
            name='TrackArtist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('primary', 'Primary'), ('featured', 'Featured'), ('remixer', 'Remixer'), ('producer', 'Producer')], default='primary', max_length=20)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.track')),
            ],
            options={
                'ordering': ['track', 'artist'],
            },
        ),
        migrations.AddField(
            model_name='track',
            name='artists',
            field=models.ManyToManyField(related_name='tracks', through='artists.TrackArtist', to='artists.artist'),
        ),
        migrations.AddConstraint(
            model_name='albumartist',
            constraint=models.UniqueConstraint(fields=('album', 'artist'), name='unique_album_artist'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['title'], name='artists_alb_title_a8a9a6_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=django.contrib.postgres.indexes.GinIndex(fields=['title'], name='album_title_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddConstraint(
            model_name='album',
            constraint=models.CheckConstraint(condition=models.Q(('total_tracks__gte', 0)), name='total_tracks_gte_0'),
        ),
        migrations.AddIndex(
            model_name='artistfollower',
            index=models.Index(fields=['user', 'artist'], name='artists_art_user_id_8a5120_idx'),
        ),
        migrations.AddConstraint(
            model_name='artistfollower',
            constraint=models.UniqueConstraint(fields=('user', 'artist'), name='unique_user_artist_follow'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['name'], name='artists_gen_name_f6228d_idx'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='genre_name_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddConstraint(
            model_name='trackartist',
            constraint=models.UniqueConstraint(fields=('track', 'artist'), name='unique_track_artist'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['popularity'], name='artists_tra_popular_28ddde_idx'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['album', 'track_number'], name='artists_tra_album_i_b4df86_idx'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=django.contrib.postgres.indexes.GinIndex(fields=['title'], name='track_title_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddConstraint(
            model_name='track',
            constraint=models.UniqueConstraint(fields=('album', 'disc_number', 'track_number'), name='unique_track_in_album'),
        ),
        migrations.AddConstraint(
            model_name='track',
            constraint=models.CheckConstraint(condition=models.Q(('duration_ms__gt', 0)), name='duration_ms_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='track',
            constraint=models.CheckConstraint(condition=models.Q(('popularity__gte', 0), ('popularity__lte', 100)), name='popularity_between_0_and_100'),
        ),
        migrations.AddConstraint(
            model_name='track',
            constraint=models.UniqueConstraint(condition=models.Q(('isrc__isnull', False)), fields=('isrc',), name='unique_isrc_if_not_null'),
        ),
    ]
