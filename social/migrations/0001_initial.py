# Generated by Django 5.2.5 on 2025-09-01 23:24

import django.db.models.deletion
import secrets
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("artists", "0005_album_comments_count_album_likes_count_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActivityFeedItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "verb",
                    models.CharField(
                        choices=[
                            ("follow", "Follow"),
                            ("like", "Like"),
                            ("comment", "Comment"),
                            ("share", "Share"),
                            ("create_playlist", "Create Playlist"),
                            ("upload_track", "Upload Track"),
                            ("repost", "Repost"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "object_type",
                    models.CharField(
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                            ("artist", "Artist"),
                            ("user", "User"),
                            ("comment", "Comment"),
                        ],
                        max_length=20,
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "target_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                            ("artist", "Artist"),
                            ("user", "User"),
                            ("comment", "Comment"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("target_id", models.UUIDField(blank=True, null=True)),
                ("data", models.JSONField(blank=True, default=dict)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "actor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["actor", "-created_at"],
                        name="social_acti_actor_i_b6fb8f_idx",
                    ),
                    models.Index(
                        fields=["is_public", "-created_at"],
                        name="social_acti_is_publ_cececd_idx",
                    ),
                    models.Index(
                        fields=["object_type", "object_id"],
                        name="social_acti_object__912619_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "object_type",
                    models.CharField(
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                        ],
                        max_length=20,
                    ),
                ),
                ("object_id", models.UUIDField()),
                ("body", models.TextField()),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="social.comment",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(
                        fields=["object_type", "object_id", "created_at"],
                        name="social_comm_object__dc9c63_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("follow", "Follow"),
                            ("like", "Like"),
                            ("comment", "Comment"),
                            ("repost", "Repost"),
                            ("mention", "Mention"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("actor_id", models.UUIDField(blank=True, null=True)),
                (
                    "object_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                            ("artist", "Artist"),
                            ("user", "User"),
                            ("comment", "Comment"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("object_id", models.UUIDField(blank=True, null=True)),
                ("payload", models.JSONField(blank=True, default=dict)),
                ("is_read", models.BooleanField(db_index=True, default=False)),
                ("delivered", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_read"],
                        name="social_noti_user_id_dae7db_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ShareableContent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                            ("artist", "Artist"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_id", models.UUIDField()),
                (
                    "share_token",
                    models.CharField(
                        default=secrets.token_urlsafe, max_length=48, unique=True
                    ),
                ),
                ("is_unlisted", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["share_token"], name="social_shar_share_t_b4d82a_idx"
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("owner", "content_type", "content_id"),
                        name="unique_shareable_content",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="SocialInteraction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("save", "Save"),
                            ("repost", "Repost"),
                            ("followback", "Followback"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "object_type",
                    models.CharField(
                        choices=[
                            ("track", "Track"),
                            ("album", "Album"),
                            ("playlist", "Playlist"),
                            ("artist", "Artist"),
                            ("comment", "Comment"),
                        ],
                        max_length=20,
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "interaction_type"],
                        name="social_soci_user_id_189f6e_idx",
                    ),
                    models.Index(
                        fields=["object_type", "object_id"],
                        name="social_soci_object__3718c4_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("user", "interaction_type", "object_type", "object_id"),
                        name="unique_user_interaction",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="UserFollowing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "followee_artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artist_followers",
                        to="artists.artist",
                    ),
                ),
                (
                    "followee_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["follower", "followee_user"],
                        name="social_user_followe_2f8b9a_idx",
                    ),
                    models.Index(
                        fields=["follower", "followee_artist"],
                        name="social_user_followe_dc1e6e_idx",
                    ),
                    models.Index(
                        fields=["followee_user"], name="social_user_followe_4e6c67_idx"
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("followee_user__isnull", False)),
                        fields=("follower", "followee_user"),
                        name="unique_user_follow",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("followee_artist__isnull", False)),
                        fields=("follower", "followee_artist"),
                        name="unique_artist_follow",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("followee_artist__isnull", True),
                                ("followee_user__isnull", False),
                            ),
                            models.Q(
                                ("followee_artist__isnull", False),
                                ("followee_user__isnull", True),
                            ),
                            _connector="OR",
                        ),
                        name="check_one_followee_type",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            ("follower_id", models.F("followee_user_id")), _negated=True
                        ),
                        name="prevent_self_follow",
                    ),
                ],
            },
        ),
    ]
